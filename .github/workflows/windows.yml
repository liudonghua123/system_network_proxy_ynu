name: Windows-CI

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    env:
      APP_NAME: system_network_proxy_ynu
    runs-on: windows-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        shell: bash

      - uses: actions/setup-java@v1
        with:
          java-version: '8.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Enable windows support
        run: |
          flutter config --enable-windows-desktop

      - name: Build windows
        run: |
          flutter pub get
          flutter build windows

      - name: Copy required Visual C++ redistributables files
        run: |
          cp -r ./resources/windows_c++_redistributables/* ./build/windows/runner/Release/
        shell: bash

      # http://markwal.github.io/programming/2015/07/28/squirrel-for-windows.html
      - name: Build setup installer with squirrel.windows
        run: |
          mkdir -p ./build/squirrel.windows.build/lib/net45/
          cp -r ./build/windows/runner/Release/* ./build/squirrel.windows.build/lib/net45/
          cp -r ./resources/${APP_NAME}.nuspec ./build/squirrel.windows.build/${APP_NAME}.nuspec
          ./resources/nuget.exe pack ./build/squirrel.windows.build/${APP_NAME}.nuspec -BasePath ./build/squirrel.windows.build -OutputDirectory ./build/squirrel.windows.build
          ./resources/packages/squirrel.windows.2.0.1/tools/Squirrel.exe --releasify ./build/squirrel.windows.build/${APP_NAME}.1.0.0.nupkg --releaseDir=./build/squirrel.windows.build-release --loadingGif=./resources/launch_1.gif --setupIcon=./resources/app_icon.ico
        shell: bash

      - name: Prepare release files
        run: |
          7z a -tzip ${APP_NAME}-windows-x64-${{ steps.branch_name.outputs.SOURCE_NAME }}.zip -r ./build/windows/runner/Release/*
        shell: bash

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${APP_NAME}-windows-x64-${{ steps.branch_name.outputs.SOURCE_NAME }}.zip; build/squirrel.windows.build-release/*
          tags: true
          draft: false
          overwrite: true
